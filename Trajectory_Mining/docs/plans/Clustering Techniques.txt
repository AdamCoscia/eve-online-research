Resources

Introduction to Statistical Learning with R

Source: <https://stats.stackexchange.com/questions/131281/dynamic-time-warping-clustering/131337#131337>
  
  Yes, you can use DTW approach for classification and clustering of time 
  series. I've compiled the following resources, which are focused on this very 
  topic (I've recently answered a similar question, but not on this site, so 
  I'm copying the contents here for everybody's convenience):
  - UCR Time Series Classification/Clustering
  - Time Series Classification and Clustering with Python
  - Capital Bikeshare: Time Series Clustering
  - Time Series Classification and Clustering
  - Dynamic Time Warping using rpy and Python
  - Mining Time-series with Trillions of Points: Dynamic Time Warping at 
    Scale
  - Time Series Analysis and Mining in R (to add R to the mix)
  
Source: <https://stats.stackexchange.com/questions/131281/dynamic-time-warping-clustering/131337#131337>

  Do not use k-means for timeseries.

  DTW is not minimized by the mean; k-means may not converge and even if it 
  converges it will not yield a very good result. The mean is an least-squares 
  estimator on the coordinates. It minimizes variance, not arbitrary distances, 
  and k-means is designed for minimizing variance, not arbitrary distances.  
  
  Assume you have two time series. Two sine waves, of the same frequency, and a 
  rather long sampling period; but they are offset by π. Since DTW does time 
  warping, it can align them so they perfectly match, except for the 
  beginning and end. DTW will assign a rather small distance to these two 
  series. However, if you compute the mean of the two series, it will be a flat 
  0 - they cancel out. The mean does not do dynamic time warping, and loses 
  all the value that DTW got. On such data, k-means may fail to converge, 
  and the results will be meaningless. K-means really should only be used with 
  variance (= squared Euclidean), or some cases that are equivalent (like 
  cosine, on L2 normalized data, where cosine similarity is the same as 2−
  squared Euclidean distance)


  Instead, compute a distance matrix using DTW, then run hierarchical 
  clustering such as single-link. In contrast to k-means, the series may even 
  have different length. 

Parameters

- Collection of 2737 uneven (irregular) time series
- Each time series has 3 variables to consider: 
  - h <- HighSlot
  - m <- MidSlot
  - l <- LowSlot
- Observations in the time series are uneven, i.e., are not evenly spaced across
  the series.
- The length of each time series differs, as well as the number of observations
  made.

Solutions

1) General Procedure for Clustering Multivariate Time Series Datasets:
- Determine Similarity Measure between time series... some common ones include:
  - Euclidean Distance
  - Dynamic Time Warping
- Compute Similarity Measure pairwise for each series in the collection
- Apply Clustering algorithm to the pairwise similarity measures... some 
  common ones for time series are:
  - Hierarchical Clustering
  - k-medoids (NOT K-MEANS)